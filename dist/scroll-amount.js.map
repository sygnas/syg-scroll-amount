{"version":3,"file":"scroll-amount.js","sources":["../src/index.ts"],"sourcesContent":["/**\n * Add scrolling state(top / not-top / bottom / not-bottom)\n *\n * @author   Hiroshi Fukuda <info.sygnas@gmail.com>\n * @license  MIT\n */\n\nimport { TOption, TTopOrBottom } from \"./types\";\n\n\n///////////////////////////////////////\n\n\n// 状態を付与するためのdata属性\nconst ATTR_NAME: string = \"data-scroll-amount\";\n\n// 状態の名前\nconst ATTR_TOP: string = \"top\";\nconst ATTR_BOTTOM: string = \"bottom\";\nconst ATTR_NOT_TOP: string = \"not-top\";\nconst ATTR_NOT_BOTTOM: string = \"not-bottom\";\nconst ATTR_POSITION: string = \"data-position\";\n\n// 監視用エレメントのデフォルトstyle\nconst COMMON_STYLE: object = {\n  position: \"absolute\",\n  left: \"0\",\n};\n\n// IntersectionObserverの設定\nconst OBSERVER_OPT: IntersectionObserverInit = {\n  root: null,\n  rootMargin: \"0px\",\n  threshold: 0,\n};\n\n///////////////////////////////////////\nclass SygScrollAmount {\n  private opt: TOption;\n  private targets;\n  private isTop: boolean;\n  private isBottom: boolean;\n  private lastState: string;\n  // private observers: IntersectionObserver[];\n\n  /**\n   * コンストラクタ\n   * @param target string 状態を付与する対象エレメントのセレクタ文字列\n   */\n  constructor(target: string, options: TOption = {}) {\n    const defaults: TOption = {\n      // 最上部のオフセット\n      offsetTop: \"70px\",\n      // 最下部のオフセット\n      offsetBottom: \"70px\",\n      // 最上部にスクロールした時に実行\n      onTop() {},\n      // 最上部から離れた時に実行\n      onNotTop() {},\n      // 最下部にスクロールした時に実行\n      onBottom() {},\n      // 最下部から離れた時に実行\n      onNotBottom() {},\n    };\n\n    // 与えられた設定を適用\n    this.opt = Object.assign(defaults, options);\n    // 状態付与の対象\n    this.targets = document.querySelectorAll<HTMLElement>(target);\n    // 一番上にスクロールした\n    this.isTop = false;\n    // 一番下にスクロールした\n    this.isBottom = false;\n    // 最後の状態\n    this.lastState = '';\n\n    this.start();\n  }\n\n  /**\n   * 監視用エレメント作成して監視開始\n   */\n  createObserveElement(position: TTopOrBottom): HTMLDivElement {\n    const element: HTMLDivElement = document.createElement(\"div\");\n\n    Object.assign(element.style, COMMON_STYLE);\n    element.style.height = this.opt.offsetTop as string;\n    element.setAttribute(ATTR_POSITION, position);\n\n    if (position === \"top\") {\n      element.style.top = \"0\";\n    } else {\n      element.style.bottom = \"0\";\n    }\n    // ページ最下部に追加\n    document.body.appendChild(element);\n    return element;\n  }\n\n  /**\n   * スクロール検知処理を開始\n   */\n  private start() {\n    // <body> に position 設定\n    document.body.style.position = \"relative\";\n\n    // IntersectionObserverを作成して監視開始\n    const observer: IntersectionObserver = new IntersectionObserver(\n      this.observerCallback.bind(this),\n      OBSERVER_OPT\n    );\n\n    // 監視用エレメント作成\n    observer.observe(this.createObserveElement(\"top\"));\n    observer.observe(this.createObserveElement(\"bottom\"));\n  }\n\n  /**\n   * スクロール処理\n   * IntersectionObserver に反応した <div> が top/bottom どちらかで判定する\n   */\n  private observerCallback( entries: IntersectionObserverEntry[]): void {\n\n    entries.forEach((entry) => {\n      const position: TTopOrBottom = entry.target.getAttribute(\n        ATTR_POSITION\n      ) as TTopOrBottom;\n\n      if (position === \"top\") {\n        this.isTop = entry.isIntersecting;\n      } else {\n        this.isBottom = entry.isIntersecting;\n      }\n    });\n\n    // 属性を付与\n    this.setAttribute();\n  }\n\n  /**\n   * 属性を付与\n   */\n  private setAttribute(): void {\n    const state: string = [\n      this.isTop ? ATTR_TOP : ATTR_NOT_TOP,\n      this.isBottom ? ATTR_BOTTOM : ATTR_NOT_BOTTOM,\n    ].join(' ');\n\n    // 結果を data属性に反映する\n    // 前回と同じなら反映しない\n    if (state !== this.lastState) {\n      this.lastState= state;\n\n      this.targets.forEach((target: HTMLElement) => {\n        target.setAttribute(ATTR_NAME, state);\n      });\n\n      // オプション関数を実行\n      if(this.isTop && this.opt.onTop){\n        this.opt.onTop();\n      }else if(this.opt.onNotTop){\n        this.opt.onNotTop();\n      }\n\n      if(this.isBottom && this.opt.onBottom){\n        this.opt.onBottom();\n      }else if(this.opt.onNotBottom){\n        this.opt.onNotBottom();\n      }\n    }\n  }\n}\n\n\nexport default SygScrollAmount;\n"],"names":["ATTR_NAME","ATTR_TOP","ATTR_BOTTOM","ATTR_NOT_TOP","ATTR_NOT_BOTTOM","ATTR_POSITION","COMMON_STYLE","position","left","OBSERVER_OPT","root","rootMargin","threshold","SygScrollAmount","target","options","defaults","offsetTop","offsetBottom","onTop","onNotTop","onBottom","onNotBottom","opt","Object","assign","targets","document","querySelectorAll","isTop","isBottom","lastState","start","element","createElement","style","height","setAttribute","top","bottom","body","appendChild","observer","IntersectionObserver","observerCallback","bind","observe","createObserveElement","entries","forEach","entry","getAttribute","isIntersecting","state","join"],"mappings":"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"}